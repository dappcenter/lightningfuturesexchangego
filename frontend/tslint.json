{
  // https://palantir.github.io/tslint/rules/
  // Initially copied from: https://github.com/Microsoft/TypeScript-React-Starter/blob/master/tslint.json
  //"extends": ["tslint-react-recommended"],
  "linterOptions": {
    "exclude": [ "**/tests/**", "**/__tests__/**", "**/unit/**" ]
  },
  "rules": {
    "prefer-const": true,
    "prefer-readonly": true,
    "comment-format": false, // [true, //"check-space"],
    "curly": true,
    "eofline": false,
    "forin": false,
    "interface-name": [true, "never-prefix"],
    "jsx-no-lambda": false,
    "jsx-no-multiline-js": false,
    "label-position": true,
    // I don't think this is really that useful.
    //"max-line-length": [ true, 120 ],
    //"member-ordering": [ true  ],
    "no-arg": true,
    "no-console": [
      true,
      "log",
      "error",
      "debug",
      "info",
      "time",
      "timeEnd",
      "trace"
    ],
    "no-string-literal": false, // TODO:
    "one-line": [
      true,
      "check-catch",
      "check-whitespace"
    ],
    "quotemark": [true, "single", "jsx-double"],
    "trailing-comma": false,
    "typedef": [
      true,
      "property-declaration"
    ],
    "typedef-whitespace": [
      true,
      {
        "call-signature": "nospace",
        "index-signature": "nospace",
        "parameter": "nospace",
        "property-declaration": "nospace",
        "variable-declaration": "nospace"
      }
    ],
    "whitespace": [
      true,
      "check-branch",
      "check-decl",
      "check-module",
      "check-operator",
      "check-separator",
      "check-type",
      "check-typecast"
    ],

    // TypeScript specific
    "adjacent-overload-signatures": true,
    "ban-types": [true, ["Number", "Boolean", "String", "Array"]],
    "no-inferrable-types": true,
    "no-magic-numbers": false,
    "no-unnecessary-type-assertion": true,
    "prefer-for-of": true,
    "unified-signatures": true,

    // Functionality
    "ban-comma-operator": true,
    "no-construct": true,
    "no-duplicate-super": true,
    "no-duplicate-switch-case": true,
    "no-duplicate-variable": true,
    "no-debugger": true,
    "no-empty": true,
    "no-eval": true,
    "no-for-in-array": true,
    // The following rule seems to be broken. Got a failure regarding "react"
    //"no-implicit-dependencies": true,
    "no-invalid-template-strings": true,
    "no-invalid-this": true,
    "no-misused-new": true,
    // It would be best to have types everywhere, but incrementally adding types to massive JavaScript objects is hard
    //"no-object-literal-type-assertion": true,
    "no-return-await": true,
    "no-shadowed-variable": true,
    "no-sparse-arrays": true,
    "no-string-throw": true,
    "no-switch-case-fall-through": true,
    "no-this-assignment": true,
    "no-unbound-method": true,
    "no-unsafe-any": false,
    "no-unsafe-finally": true,
    "no-unused-expression": true,
    "no-use-before-declare": true,
    "no-var-keyword": true,
    "no-void-expression": true,
    "prefer-conditional-expression": true,
    "prefer-object-spread": true,
    "radix": false,
    "restrict-plus-operands": true,
    "strict-type-predicates": false, // TODO: enable, but will need --strictNullChecks
    "switch-default": true,
    "triple-equals": true,
    "use-default-type-parameter": true,
    "use-isnan": true,

    // Maintainability
    "cyclomatic-complexity": [true, 20],
    "max-file-line-count": [true, 1200],
    "max-classes-per-file": [true, 20],
    "indent": [ true, "spaces", 2 ],
    // We should enable this someday, but it implies some signficant refactoring
    //"no-default-export": true,
    "no-duplicate-imports": true,
    // Too much work, not enough benefit to ensure.
    //"object-literal-sort-keys": true,

    // Style
    "array-type": [true, "array"],
    "arrow-parens": true,
    "arrow-return-shorthand": true,
    "binary-expression-operand-order": true,
    "class-name": true,
    "completed-docs": [false],
    "interface-over-type-literal": true,
    "jsdoc-format": false,
    "new-parens": true,
    "no-angle-bracket-type-assertion": true,
    "no-boolean-literal-compare": true,
    "no-consecutive-blank-lines": true,
    "no-irregular-whitespace": true,
    "no-parameter-properties": false,
    "no-reference-import": true,
    "no-trailing-whitespace": true,
    "no-unnecessary-callback-wrapper": true,
    "no-unnecessary-initializer": true,
    "no-unnecessary-qualifier": true,
    "number-literal-format": true,
    "object-literal-key-quotes": [true, "as-needed"],
    "object-literal-shorthand": true,
    // Without a fixer, this is a brutal rule to enforce. Tools work better.
    // "ordered-imports": true,
    "prefer-function-over-method": false, // false, because it won't let you create a PureComponent if you don't use 'this' inside
    "prefer-method-signature": false,
    "prefer-template": true,
    "return-undefined": true,
    "semicolon": [true, "always"],
    "space-before-function-paren": [true, "never"],
    "switch-final-break": true,
    "type-literal-delimiter": true,
    "variable-name": false // [true, "ban-keywords", "check-format", "allow-leading-underscore", "allow-pascal-case"]
  }
}
